import React, { useState, useMemo } from 'react';
import KaTeX from 'katex';
import 'katex/dist/katex.min.css?raw';

var LatexPreview = function LatexPreview(props) {
  var latex = props.value && props.value.body || '';
  var isInline = props.layout === 'inline';

  var _useState = useState(''),
      html = _useState[0],
      setHtml = _useState[1];

  var createHtml = function createHtml() {
    setHtml(KaTeX.renderToString(latex, {
      displayMode: !isInline,
      throwOnError: false
    }));
  };

  useMemo(createHtml, [latex, isInline]);

  if (isInline) {
    return React.createElement("span", {
      dangerouslySetInnerHTML: {
        __html: html
      }
    });
  }

  return React.createElement("div", {
    dangerouslySetInnerHTML: {
      __html: html
    }
  });
};

var index = {
  name: 'latex',
  type: 'object',
  fields: [{
    title: 'LaTeX content',
    name: 'body',
    type: 'text'
  }],
  preview: {
    select: {
      body: 'body'
    },
    prepare: function prepare(selection) {
      return selection;
    },
    component: LatexPreview
  }
};

export default index;
//# sourceMappingURL=sanity-plugin-latex-input.esm.js.map
