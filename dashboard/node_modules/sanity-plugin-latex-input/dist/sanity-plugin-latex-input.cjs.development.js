'use strict';

Object.defineProperty(exports, '__esModule', { value: true });

function _interopDefault (ex) { return (ex && (typeof ex === 'object') && 'default' in ex) ? ex['default'] : ex; }

var React = require('react');
var React__default = _interopDefault(React);
var KaTeX = _interopDefault(require('katex'));
require('katex/dist/katex.min.css?raw');

var LatexPreview = function LatexPreview(props) {
  var latex = props.value && props.value.body || '';
  var isInline = props.layout === 'inline';

  var _useState = React.useState(''),
      html = _useState[0],
      setHtml = _useState[1];

  var createHtml = function createHtml() {
    setHtml(KaTeX.renderToString(latex, {
      displayMode: !isInline,
      throwOnError: false
    }));
  };

  React.useMemo(createHtml, [latex, isInline]);

  if (isInline) {
    return React__default.createElement("span", {
      dangerouslySetInnerHTML: {
        __html: html
      }
    });
  }

  return React__default.createElement("div", {
    dangerouslySetInnerHTML: {
      __html: html
    }
  });
};

var index = {
  name: 'latex',
  type: 'object',
  fields: [{
    title: 'LaTeX content',
    name: 'body',
    type: 'text'
  }],
  preview: {
    select: {
      body: 'body'
    },
    prepare: function prepare(selection) {
      return selection;
    },
    component: LatexPreview
  }
};

exports.default = index;
//# sourceMappingURL=sanity-plugin-latex-input.cjs.development.js.map
